<?php

namespace app\admin\controller;

use app\model\Categorys;
use think\facade\View;
use think\Request;
use util\Tree;

class Category extends Base
{
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $category = Categorys::where([['parent_id','=',1]])->paginate(20,false, ['query'=>input('get.')]);

        $category = Tree::toList($category,'id', 'parent_id');

        View::assign('category', $category);
    }

    /**
     * 显示资源列表
     *
     * @return \think\Response
     */
    public function index()
    {
        $category = Categorys::where([['parent_id','=',0]])->paginate();


        View::assign('list', $category);
        return View::fetch();
    }

    /**
     * 显示创建资源表单页.
     *
     * @return \think\Response
     */
    public function create()
    {
        //
        if(request()->isAjax()){
            $this->save();
        }
        return View::fetch('info');
    }

    /**
     * 保存新建的资源
     *
     * @param  \think\Request  $request
     * @return \think\Response
     */
    public function save()
    {
        //
        $data = input('post.');
        $data['status'] = $data['status'] ? 1 : 0;

        if($data){
            if($data['id'])
                $res = Categorys::update($data);
            else
                $res = Categorys::insert($data);

            $res ? $this->success('操作成功~') : $this->error('操作失败~');
        }
    }

    /**
     * 显示指定的资源
     *
     * @param  int  $id
     * @return \think\Response
     */
    public function read($id)
    {
        //
    }

    /**
     * 显示编辑资源表单页.
     *
     * @param  int  $id
     * @return \think\Response
     */
    public function edit($id)
    {
        //
        if(request()->isAjax()){
            $this->save();
        }
        $info = Categorys::find($id)->toArray();
        View::assign($info);
        return View::fetch('info');
    }


    /**
     * 获取嵌套式节点
     * @param array $lists 原始节点数组
     * @param int $parent_id 父级id
     * @param int $max_level 最多返回多少层，0为不限制
     * @param int $curr_level 当前层数
     * @author 胡卫兵 <659998662@qq.com>
     * @return string
     */
    private function getNestCate($lists = [], $max_level = 0, $parent_id = 0, $curr_level = 1)
    {
        $cate_pid = input('cate_pid/d');
        $result = '';
        foreach ($lists as $key => $value) {
            if ($value['parent_id'] == $parent_id) {
                $disable  = $value['status'] == 0 ? 'dd-disable' : '';

                // 组合节点
                $result .= '<li class="dd-item dd3-item '.$disable.'" data-id="'.$value['id'].'">';
                $result .= '<div class="dd-handle dd3-handle">拖拽</div><div class="dd3-content"><i class="'.$value['icon'].'"></i> '.$value['name'];

                $result .= '<div class="action">';
                $result .= '<a class="pop" href="'.url('/category/add', ['parent_id' => $value['id']]).'" data-toggle="tooltip" data-original-title="新增子节点"><i class="list-icon fa fa-plus fa-fw"></i></a><a class="pop" href="'.url('/category/edit', ['parent_id' => $value['id'],'cate_pid' => $cate_pid]).'" data-toggle="tooltip" data-original-title="编辑"><i class="list-icon fa fa-pencil fa-fw"></i></a>';
                if ($value['status'] == 0) {
                    // 启用
                    $result .= '<a href="javascript:void(0);" data-ids="'.$value['id'].'" class="enable" data-toggle="tooltip" data-original-title="启用"><i class="list-icon fa fa-check-circle-o fa-fw"></i></a>';
                } else {
                    // 禁用
                    $result .= '<a href="javascript:void(0);" data-ids="'.$value['id'].'" class="disable" data-toggle="tooltip" data-original-title="禁用"><i class="list-icon fa fa-ban fa-fw"></i></a>';
                }
                $result .= '<a href="'.url('/category/del', ['id' => $value['id'], 'table' => 'category']).'" data-toggle="tooltip" data-original-title="删除" class="ajax-get confirm"><i class="list-icon fa fa-times fa-fw"></i></a></div>';
                $result .= '</div>';

                if ($max_level == 0 || $curr_level != $max_level) {
                    unset($lists[$key]);
                    // 下级节点
                    $children = $this->getNestCate($lists, $max_level, $value['id'], $curr_level + 1);
                    if ($children != '') {
                        $result .= '<ol class="dd-list">'.$children.'</ol>';
                    }
                }

                $result .= '</li>';
            }
        }
        return $result;
    }

    /**
     * 递归解析节点
     * @param array $menus 节点数据
     * @param int $pid 上级节点id
     * @author 胡卫兵 <659998662@qq.com>
     * @return array 解析成可以写入数据库的格式
     */
    private function parseMenu($menus = [], $pid = 0)
    {
        $sort   = 1;
        $result = [];
        foreach ($menus as $menu) {
            $result[] = [
                'id'   => (int)$menu['id'],
                'parent_id'  => (int)$pid,
                'sort' => $sort,
            ];
            if (isset($menu['children'])) {
                $result = array_merge($result, $this->parseMenu($menu['children'], $menu['id']));
            }
            $sort ++;
        }
        return $result;
    }
}
