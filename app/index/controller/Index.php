<?php
declare (strict_types=1);

namespace app\index\controller;

use app\model\Collects;
use app\model\Download_logs;
use app\model\PropertyExpLogs;
use app\model\Resources;
use app\model\Users;
use think\facade\Db;
use think\facade\View;

class Index extends Common
{
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $seo = [
            'seo_title' => config('app.web_site_slogan') . '-' . config('app.web_site_title'),
            'keywords'  => config('app.web_site_keywords'), 'description' => config('app.web_site_description')
        ];
        View::assign($seo);
    }

    /**
     * 首页
     *
     * @return \think\Response
     */
    public function index()
    {
        $where[] = ['a.status','=',1];
        $list = Resources::alias('a')->field('a.id,title,channel,description,clicks,downs,tags,a.create_time,b.thumb')
            ->leftJoin('attachments b', 'a.thumb=b.id')->where($where)->order('a.create_time', 'desc')->limit(20)->select();

        $hot = Resources::field('id,channel,title')->where('status', 1)->order('clicks desc')->limit(7)->select();

        View::assign('list', $list);
        View::assign('hot', $hot);
        View::assign('_channel', 'home');
        return View::fetch();
    }

    /**
     * 列表页面
     * @return string
     * @throws \Exception
     */
    public function channel()
    {
        $baseUrl  = request()->baseUrl();
        $baseUrl  = substr(str_replace('.html', '', $baseUrl), 1);
        $_channel = explode('/', $baseUrl)[0];
        $type     = input('type/d') ?: 0;
        $system   = input('system/d') ?: 0;
        $layout   = input('layout/d') ?: 0;
        $color    = input('color/d') ?: 0;
        $language = input('language/d') ?: 0;
        $order    = input('order/d') ?: 0;
        $page     = input('page/d') ?: 1;

        $where[] = ['a.status', '=', 1];
        $where[] = ['a.channel', '=', $_channel];
        if ($type) {
            $keywords = getSourceById($type)['value'].','.config('app.web_site_keywords');
            $where[] = ['a.type', '=', $type];
        }
        if ($system) {
            $where[] = ['a.system', '=', $system];
        }
        if ($layout) {
            $where[] = ['a.layout', '=', $layout];
        }
        if ($color) {
            $where[] = ['a.color', '=', $color];
        }
        if ($language) {
            if ($language == 1)
                $where[] = ['a.language', '=', 'zh']; else
                $where[] = ['a.language', '=', 'en'];
        }
        switch ($order) {
            case 0:
                $orderBy = 'a.create_time desc';
                break;
            case 1:
                $orderBy = 'a.downs desc';
                break;
            case 2:
                $orderBy = 'a.comments desc';
                break;
            case 3:
                $orderBy = 'a.clicks desc';
                break;
            case 4:
                $orderBy = 'a.flag desc';
                break;
        }

        $path = getUrl($_channel, $type, $order, $page, $system, $layout, $color, $language);

        $page_config = [
            'list_rows' => 12, 'path' => $path
        ];

        $list = Resources::alias('a')->field('a.id,title,channel,description,clicks,a.user_id,downs,tags,b.thumb,c.nickname')
            ->leftJoin('attachments b', 'a.thumb=b.id')->leftJoin('users c', 'a.user_id=c.id')->where($where)
            ->order($orderBy)->paginate($page_config);

        $page_tpl   = $list->render();
        $list       = $list->toArray();
        $sourceAttr = getSourceAttr($_channel);

        switch ($_channel) {
            case 'jquery':
                $total = '关于网页特效的特效素材有' . $list['total'] . '个';
                break;
            case 'source':
                $total = '关于整站源码的源码素材有' . $list['total'] . '个';
                break;
            case 'templates':
                $total = '关于网站模板的模板素材有' . $list['total'] . '个';
                break;
        }

        $data = [
            'data'     => $list, 'page' => $page, 'order' => $order, 'type' => $type, 'system' => $system,
            'layout'   => $layout, 'color' => $color, 'page_tpl' => $page_tpl, 'language' => $language,
            '_channel' => $_channel, 'sourceAttr' => $sourceAttr, 'total' => $total,'keywords'=>$keywords
        ];


        View::assign($data);
        return View::fetch();
    }

    /**
     * 详情页面
     * @param $id
     * @return string
     * @throws \Exception
     */
    public function view($id)
    {
        try {
            $info = Resources::alias('a')->field('a.*, b.path as image_src,c.nickname,c.avatar,c.default_avatar,c.job')
                ->leftJoin('attachments b', 'a.thumb=b.id')->leftJoin('users c', 'a.user_id=c.id')->where('a.status', 1)
                ->find($id);
            if ($info) {
                $info         = $info->toArray();
                $info['tags'] = explode(',', $info['tags']);
                if (session('user')) {
                    $property             = $this->getProperty();
                    $info['user_points']  = $property['points'];
                    $info['user_coin']    = $property['coin'];
                    $info['is_buy']       = $this->isBuySource($id);
                    $info['comment_list'] = $this->getComments();
                    $info['seo_title']    = $info['title'] . '-' . config('app.web_site_title');
                }
                Resources::where('id', $id)->update(['clicks' => $info['clicks'] + 1]);

                $next_where = [
                    ['id', '<', $id], ['status', '=', 1], ['channel', '=', $info['channel']],
                ];
                $prev_where = [
                    ['id', '>', $id], ['status', '=', 1], ['channel', '=', $info['channel']],
                ];
                $next       = Resources::field('id,title')->where($next_where)->order('id desc')->find();
                $prev       = Resources::field('id,title')->where($prev_where)->order('id')->find();

                $info['next'] = $next;
                $info['prev'] = $prev;
            } else {
                $this->error('您访问的页面不存在');
            }


            View::assign('_channel', $info['channel']);
            View::assign($info);
        } catch (\Exception $e) {
            $this->error($e->getMessage());
            $this->error('您访问的页面不存在');
        }


        return View::fetch();
    }

    public function collect()
    {
        if (!is_login()) {
            return show(2);
        }
        $id = input('id/d');
        if (!$id) {
            return show(0, '非法请求~');
        }
        try {
            $where = [
                ['user_id', '=', session('user.id')], ['res_id', '=', $id],
            ];
            if (Collects::where($where)->find()) {
                return show(0, '您已收藏过此资源，请勿重复收藏~');
            }
            $data                = Resources::field('title,channel,thumb')->where('id', $id)->find()->toArray();
            $data['res_id']      = $id;
            $data['create_time'] = time();
            $data['user_id']     = session('user.id');

            Collects::insert($data);
        } catch (\Exception $e) {
            return show(0, '网络繁忙，请稍后重试');
        }
        return show(1, '收藏成功~');
    }

    /**
     * 文件下载
     * @return array|void
     */
    public function download()
    {
        if (request()->isAjax()) {
            if (!is_login()) {
                return show(2);
            }
            $id = input('id/d');
            if (!$id) {
                return show(0, '缺少参数');
            }
            $info  = Resources::alias('a')
                ->field('a.id,a.title,a.points,buy_type,downs,a.thumb,a.user_id,a.channel,b.path,b.ext')
                ->leftJoin('attachments b', 'a.file_id=b.id')->where('a.id', $id)->find();
            $title = $info['title'];


            Db::startTrans();
            try {
                $property = $this->getProperty();

                $user_id = session('user.id');
                $points  = 0;
                $coin    = 0;
                $time    = time();

                if ($info['points'] && !$this->isBuySource($id) && !$this->isMySource($id)) {

                    if ($info['buy_type'] == 1) {
                        if ($property['points'] < $info['points']) {
                            return show(0, '您的积分余额不足~');
                        }
                        $points = $info['points'];

                    } else {
                        if ($property['coin'] < $info['coin']) {
                            return show(0, '您的金币余额不足');
                        }
                        $coin = $info['points'];
                    }


                    //给下载人减掉对应的金币或积分并记录资金变动记录
                    $user_save = [
                        'points' => Db::raw('points-' . $points), 'coin' => Db::raw('coin-' . $coin),
                    ];
                    Users::where('id', $user_id)->update($user_save);
                    session('user', Users::getBaseInfo($user_id));
                    $property_exp_log = [
                        'user_id' => $user_id, 'title' => '下载资源[' . $title . ']', 'points' => $points, 'coin' => $coin,
                        'state'   => 0, 'create_time' => $time
                    ];
                    PropertyExpLogs::insert($property_exp_log);


                    //给资源发布人添加对应的金币或积分并记录资金变动记录
                    $user_save1 = [
                        'points' => Db::raw('points+' . $points), 'coin' => Db::raw('coin+' . $coin),
                    ];
                    Users::where('id', $info['user_id'])->update($user_save1);
                    $property_exp_log1 = [
                        'user_id' => $info['user_id'], 'title' => '下载资源[' . $title . ']', 'points' => $points,
                        'coin'    => $coin, 'state' => 1, 'create_time' => $time
                    ];
                    PropertyExpLogs::insert($property_exp_log1);

                }
                $download_log = [
                    'user_id' => $user_id, 'res_id' => $id, 'channel' => $info['channel'], 'thumb' => $info['thumb'],
                    'title'   => '[' . getChannelName($info['channel']) . ']' . $title, 'points' => $points,
                    'coin'    => $coin, 'create_time' => $time
                ];
                Download_logs::insert($download_log);
                Resources::where('id', $id)->update(['downs' => $info['downs'] + 1]);
                Db::commit();
            } catch (\Exception $e) {
                Db::rollback();
                return show(0, $e->getMessage());
            }
            return show(1, 'ok', ['url' => $info['path']]);
        }
        return $this->error('非法请求');
    }
}
