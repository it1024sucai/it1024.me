<?php
/**
 * Created by PhpStorm.
 * User: 659998662
 * Date: 2018/12/15
 * Time: 20:44
 */

namespace app\index\controller;


use app\BaseController;
use app\model\Comments;
use app\model\Resources;
use app\model\UsersLevels;
use app\model\Download_logs;
use app\model\PropertyExpLogs;
use app\model\Users;
use think\facade\Db;
use think\facade\View;

class Common extends BaseController
{

    public $aes               = '';
    public $cache_key         = '';
    public $params            = '';
    public $headers           = '';
    public $create_tpl        = '<div class="m-model">
        <div class="m-head">
            <a href="-href-"><img src="-avatar-"><span style="color:#666666;">L-level- -level_name-</span></a>
        </div>
        <div class="m-arrow"></div>
        <div class="m-frame">
            <div class="m-tit">
                <div class="fl"><i class="fa fa-user-circle-o"></i> -nickname-&nbsp;&nbsp;</div>
                <div class="fr"><span class="z12"><i class="fa fa-calendar"></i> -time-</span>
                </div>
                <div class="clear"></div>
            </div>
            <div class="m-con">
                <p>-content-</p>
                <div class="clear"></div>
            </div>
        </div>
    </div>';
    public $get_mail_code_tpl = '<div id="contentDiv" style="position:relative;font-size:14px;height:auto;z-index:1;zoom:1;line-height:1.7;" class="body">    
        <div style="background-color:#f2f2f2;margin:0;padding:20px ;width:100%;height:100%;font-family:Microsoft YaHei;">
            <div style="width:700px;background-color:#fff;margin:0 auto;">
                <div style="height:64px;margin:0;padding:0;width:100%;background-color:#3B97F6;">
                    <a href="-url-" style="display:block;padding-left:20px;padding-top:13px;" rel="noopener" target="_blank">
                    <span style="background: #fff;padding: 2px 10px;border-radius: 10px; line-height: 35px">IT1024素材网</span></a>
                </div>
                <div style="padding:50px;margin:0;"><div style="font-size:32px;color:#87BD29;line-height:260%;border-bottom:1px dotted #E3E3E3;">IT1024素材网欢迎您</div>
                    <p style="font-size:14px;color:#333;margin-top:30px;">
                        您的邮箱为：<span style="font-size:14px;color:#333;"><a rel="noopener" target="_blank">-mail-</a></span>，验证码为：
                    </p>
                    <p style="font-size:34px;color:#55aeff;font-style:italic;">-code-</p>
                    <p style="font-size:14px;color:#333;">验证码的有效期为5分钟，请在有效期内输入！</p>
                    <p style="font-size:14px;color:#333;">——it1024素材网</p>
                    <p style="font-size:12px;color:#999;border-top:1px dotted #E3E3E3;margin-top:30px;padding-top:30px;">
                        本邮件为系统邮件不能回复，请勿回复。
                    </p>
                </div>
            </div>
        </div>
    </div>';
    public $reply_tpl         = '<div class="reply">
        <a href="-href-"><i class="fa fa-user-circle-o" ></i> -nickname-</a>：-content-
    </div>';


    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        if (is_login()) {
            View::assign('user', session('user'));
        }
    }

    /**
     * 判断资源是否下载过
     * @param $id
     * @return bool
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\DbException
     * @throws \think\db\exception\ModelNotFoundException
     */
    public function isBuySource($id)
    {
        $where = [
            ['user_id', '=', session('user.id')], ['res_id', '=', $id],
        ];

        if (Download_logs::field('id')->where($where)->find()) {
            return true;
        }

        return false;
    }

    /**
     * 判断资源是否是自己发布的
     * @param $id
     * @return bool
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\DbException
     * @throws \think\db\exception\ModelNotFoundException
     */
    public function isMySource($id)
    {
        $where = [
            ['user_id', '=', session('user.id')], ['id', '=', $id],
        ];

        if (Resources::field('id')->where($where)->find()) {
            return true;
        }

        return false;
    }

    public function getProperty()
    {
        $property = Users::getInfo(session('user.id'), 'points,coin');
        return $property;
    }


    /**
     * 显示资源列表
     *
     * @return \think\Response
     */
    public function getComments()
    {
        $id    = input('id/d');
        $where = [
            ['a.status', '=', 1], ['res_id', '=', $id], ['a.parent_id', '=', 0],
        ];
        $list  = Comments::alias('a')->field('a.*,b.nickname,b.avatar,b.default_avatar,exp')
            ->leftJoin('users b', 'a.user_id=b.id')->where($where)->select()->toArray();
        foreach ($list as $k => $v) {
            $level             = UsersLevels::getLevel($v['exp']);
            $v                 = array_merge($v, $level);
            $lists[$k]         = $v;
            $where1            = [
                ['a.status', '=', 1], ['res_id', '=', $id], ['a.parent_id', '=', $v['id']],
            ];
            $lists[$k]['data'] = Comments::alias('a')->field('a.*,b.nickname')->leftJoin('users b', 'a.user_id=b.id')
                ->where($where1)->select()->toArray();

            unset($where1);
        }

        return $lists;
    }


    /**
     * 显示创建资源表单页.
     *
     * @return \think\Response
     */
    public function createComment()
    {
        if (!is_login()) {
            return show(2);
        }
        $user_id   = session('user.id');
        $parent_id = input('parent_id/d');
        $res_id    = input('res_id/d');
        $content   = input('content/s');

        $time_key = 'res_' . $user_id . '_' . $res_id;

        if (cache($time_key)) {
            return show(3, '提交的频率过快~');
        }


        if (!$res_id || !$content) {
            return show(0, '非法请求');
        }
        Db::startTrans();
        try {
            $avatar   = session('user.avatar');
            $nickname = session('user.nickname');
            $time     = time();
            $data     = [
                'user_id'     => $user_id, 'res_id' => $res_id, 'parent_id' => $parent_id, 'content' => $content,
                'create_time' => $time
            ];
            Comments::insert($data);
            Resources::update(['comments' => Db::raw('comments+1'), 'id' => $res_id]);
            $href = 'javascript:;';
            if ($parent_id) {
                $data['tpl'] = str_replace(['-href-', '-nickname-', '-content-'], [
                    $href, $nickname, $content
                ], $this->reply_tpl);
            } else {
                $need        = [
                    '-href-', '-nickname-', '-content-', '-avatar-', '-level-', '-level_name-', '-time-'
                ];
                $repl        = [
                    $href, $nickname, $content, $avatar, session('user.level'), session('user.level_name'),
                    date('Y-m-d H:i')
                ];
                $data['tpl'] = str_replace($need, $repl, $this->create_tpl);
            }
            $msg             = '发布成功，奖励次数用完';
            $add_comment_key = 'add_comment_' . $user_id . '_' . date('Y-m-d');
            $add_comment_num = cache($add_comment_key);

            //给资源评论人添加对应的金币或积分并记录资金变动记录（每天奖励10次）
            if ($add_comment_num < 11) {
                $points     = 10;
                $exp        = 10;
                $user_save1 = [
                    'points' => Db::raw('points+' . $points), 'exp' => Db::raw('exp+' . $exp),
                ];
                Users::where('id', $user_id)->update($user_save1);
                $property_exp_log1 = [
                    'user_id'     => $user_id, 'title' => '评论[资源]', 'points' => $points, 'exp' => $exp, 'state' => 1,
                    'create_time' => $time
                ];
                PropertyExpLogs::insert($property_exp_log1);
                $msg = '发布成功, 奖励' . $points . '积分、' . $exp . '经验值';
            }

            cache($add_comment_key, $add_comment_num + 1, ['expire' => get_today_over_time()]);
            cache($time_key, 1, ['expire' => 60]);
            Db::commit();
        } catch (\Exception $e) {
            Db::rollback();
            return show(0, '网络繁忙~');
        }

        return show(1, $msg, $data);
    }


    /**
     * 登录
     * @return array|string
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\DbException
     * @throws \think\db\exception\ModelNotFoundException
     */
    public function login()
    {
        if (\request()->isPost()) {
            $data = input('post.');
            if (!captcha_check($data['verify'])) {
                return show(0, '验证码错误');
            };

            $validate = new \app\index\validate\User();
            if (!$validate->scene('login')->check($data)) {
                return show(0, $validate->getError());
            }
            $where['username'] = $data['username'];
            $res               = Users::field('id,username,nickname,avatar,default_avatar,password,code,exp,sex,job,remark,area,coin,points')
                ->where($where)->find();
            if (!$res) {
                return show(0, '用户名不正确');
            }
            $info = $res->toArray();
            if ($info['password'] != md5($info['code'] . $data['password'])) {
                return show(0, '密码不正确');
            }
            $time = time();
            /*if ($info['token'] == self::$redis->get($data['username'] . '_token')) {
                return show(0, '您的账号已在别处登录~');
            }*/
            $info['avatar'] = get_avatar($info['avatar'], $info['default_avatar']);
            try {
                $res->login_time = $time;
                $res->login_ip   = get_ip();
                $res->save();
                unset($info['code']);
                unset($info['password']);
                $level = UsersLevels::getLevel($info['exp']);
                $info  = array_merge($info, $level);
            } catch (\Exception $e) {
                return show(0, '登录失败~');
            }
            session('user', $info);
            return show(1, '登录成功~');
        }
        return View::fetch();
    }


    /**
     * 发送邮件获取邮箱密码
     * @return array
     * @throws \PHPMailer\PHPMailer\Exception
     */
    public function getMailCode()
    {
        $mail    = input('email/s');
        $where[] = ['email', '=', $mail];
        if (Users::where($where)->find()) {
            return show(0, '该邮箱已被注册');
        }
        $code    = getAssignStr(6);
        $content = str_replace(['-url-', '-code-', '-mail-'], [
            request()->domain(), $code, $mail
        ], $this->get_mail_code_tpl);
        $res     = send_email($mail, '[IT1024素材网]：请查收您的验证码', $content);

        if ($res['code']) {
            cache($mail . '_code', $code, ['expire' => 300]);
            return show(1, '发送成功');
        }
        return show(0, '网络繁忙，请重试');
    }

    /**
     * 注册
     * @return array|string
     * @throws \Exception
     */
    public function register()
    {
        if (\request()->isPost()) {
            $data = input('post.');

            Db::startTrans();
            try {
                $validate = new \app\index\validate\User;
                if (!$validate->check($data)) {
                    return show(0, $validate->getError());
                }

                $where['username'] = $data['username'];
                $res               = Users::where($where)->value('username');
                if ($res) {
                    return show(0, '该账号已被注册');
                }
                if (!cache($data['email'] . '_code') == $data['mail_code']) {
                    return show(0, '验证码错误或过期~');
                }

                $time = time();

                $code                = getAssignStr(5, true);
                $data['code']        = $code;
                $data['avatar']      = mt_rand(1, 120);
                $data['password']    = md5($code . $data['password']);
                $data['create_time'] = $time;
                $data['update_time'] = $time;
                $data['login_time']  = $time;
                $data['login_ip']    = get_ip();
                $id                  = Users::insertGetId($data);

                $data['id']          = $id;
                $data['avatar']      = get_avatar($data['avatar'], 1);
                $level               = UsersLevels::getLevel(0);
                $data                = array_merge($data, $level);

                unset($data['mail_code']);
                unset($data['repassword']);
                unset($data['password']);

                $points = 30;
                $exp    = 30;

                $property_exp_log = [
                    'user_id'     => $id, 'title' => '注册用户', 'points' => $points, 'exp' => $exp,
                    'state'       => 1, 'create_time' => time()
                ];

                $user_save = [
                    'points' => Db::raw('points+' . $points), 'exp' => Db::raw('exp+' . $exp),
                ];
                PropertyExpLogs::insert($property_exp_log);
                Users::where('id', $id)->update($user_save);
                session('user', $data);
                Db::commit();
            } catch (\Exception $e) {
                Db::rollback();
                return show(0, '注册失败~');
            }


            return show(1, '注册成功');
        }
        return View::fetch();
    }

    /**
     * 退出登录
     */
    public function logout()
    {
        session('user', null);
        exit($this->redirect(url('/')));
    }
}